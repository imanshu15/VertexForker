/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vertexforker.screens;



import com.jme3.scene.Node;
import com.jme3.system.JmeSystem;
import com.vertexforker.entity.Player;
import jme3tools.savegame.SaveGame;

/**
 *
 * @author TP Live
 */
public class GameFrame extends javax.swing.JFrame {

    private Node gameData;
    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
        noOfPlayersConnected = 0;
        gameData = (Node) SaveGame.loadGame("SaveGame/", "ForkerGameData");
        noOfPlayersDefined = gameData.getUserData("noPlayers");
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userPanel = new javax.swing.JPanel();
        userPanel1 = new javax.swing.JPanel();
        userPanel4 = new javax.swing.JPanel();
        userPanel3 = new javax.swing.JPanel();
        userPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        getContentPane().setLayout(null);

        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(314, 90));
        getContentPane().add(jPanel1);
        jPanel1.setBounds(270, 250, 340, 100);

        userPanel.setOpaque(false);
        getContentPane().add(userPanel);
        userPanel.setBounds(350, 400, 240, 140);

        userPanel1.setOpaque(false);
        getContentPane().add(userPanel1);
        userPanel1.setBounds(40, 90, 240, 140);

        userPanel4.setOpaque(false);
        getContentPane().add(userPanel4);
        userPanel4.setBounds(520, 80, 240, 140);

        userPanel3.setOpaque(false);
        getContentPane().add(userPanel3);
        userPanel3.setBounds(640, 300, 250, 140);

        userPanel2.setOpaque(false);
        getContentPane().add(userPanel2);
        userPanel2.setBounds(10, 310, 240, 140);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vertexforker/png/Game frame.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 900, 600);
        getContentPane().add(jPanel2);
        jPanel2.setBounds(290, 0, 240, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GameFrame gm = new GameFrame();
          
                
                
                
              
                
            }
        });
        
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private static javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private static javax.swing.JPanel userPanel;
    private static javax.swing.JPanel userPanel1;
    private static javax.swing.JPanel userPanel2;
    private static javax.swing.JPanel userPanel3;
    private static javax.swing.JPanel userPanel4;
    // End of variables declaration//GEN-END:variables

    private int noOfPlayersConnected;
    private static int noOfPlayersDefined;
    
    public void setUpGameScreen(Player player) {
        PlayerPanel playerOne = null,playerTwo = null,playerThree = null,playerFour = null,playerFive = null;
        if(noOfPlayersConnected < noOfPlayersDefined){
            noOfPlayersConnected++;
            if(noOfPlayersConnected == 1) {
                playerOne = new PlayerPanel(player); userPanel.add(playerOne); 
            }else
            if(noOfPlayersConnected == 2){
                playerTwo = new PlayerPanel(player); userPanel1.add(playerTwo);
            }else
            if(noOfPlayersConnected == 3){
                playerThree = new PlayerPanel(player); userPanel2.add(playerThree);
            }else
            if(noOfPlayersConnected == 4){
                playerFour = new PlayerPanel(player); userPanel3.add(playerFour);
            }else
            if(noOfPlayersConnected == 5) {
                playerFive = new PlayerPanel(player); userPanel4.add(playerFive);
            }
        }
          ServerInfoPanel ifPanel = new ServerInfoPanel(String.valueOf(noOfPlayersConnected));
          jPanel2.add(ifPanel);
        /*
                CardPanel card1 = new CardPanel("back.png",61,85,0);
                CardPanel card2 = new CardPanel("back.png",61,85,0);
                CardPanel card3 = new CardPanel("back.png",61,85,0);
                CardPanel card4 = new CardPanel("back.png",61,85,0);
                CardPanel card5 = new CardPanel("back.png",61,85,0);
                        
                user1.userImage.setIcon(new ImageIcon("src/com/vertexforker/png/user2.png"));
                user2.userImage.setIcon(new ImageIcon("src/com/vertexforker/png/user3.png"));
                user3.userImage.setIcon(new ImageIcon("src/com/vertexforker/png/user4.png"));
                user4.userImage.setIcon(new ImageIcon("src/com/vertexforker/png/user5.png"));

              
                */ 
    }
    
    
    
}
